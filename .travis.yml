language: python
python:
  - "2.7"
  - "3.6"
services:
  - postgresql
install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy=1.11.3 scipy=0.19.1 iris=1.13 netcdf4=1.2.4 matplotlib=1.5.3 netcdftime mock filelock pytest psycopg2 django=1.11 django-filter=1.1.0;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]]; then
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy=1.15 scipy=1.1 iris=2.2 netcdf4=1.4 matplotlib=2.2 netcdftime mock filelock pytest psycopg2 django=2.1 django-filter;
    fi
  - source activate test-environment
  - pip install django-solo
  - pip install django-tables2

before_script:
  - git clone --depth=50 https://github.com/PRIMAVERA-H2020/primavera-val.git ~/primavera-val
  - export PYTHONPATH=$PYTHONPATH:~/primavera-val
  - export DJANGO_SETTINGS_MODULE=pdata_site.settings
  - cp pdata_site/settings_local.py.travis pdata_site/settings_local.py
  - psql -c 'create database travisdb;' -U postgres
  - which python
  - python --version
  - rm pdata_app/migrations/*
  - touch pdata_app/migrations/__init__.py
  - python manage.py makemigrations
  - python manage.py migrate

script:
  - python manage.py test
  - python scripts/utils/check_debug.py
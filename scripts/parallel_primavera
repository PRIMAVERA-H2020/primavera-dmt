#!/bin/bash
#BSUB -o /home/users/jseddon/lotus/%J.o
#BSUB -e /home/users/jseddon/lotus/%J.e
#BSUB -q par-multi
#BSUB -R "span[hosts=1]"
#
# SYNOPSIS
#
#   parallel_primavera <python_script.py> <options>
#
# DESCRIPTION
#
#   This script is a thin shell wrapper around Python scripts. All options are
#   passed through to the Python script after some initialisation has been
#   performed. This script requests a LOTUS job on a single host.
#
# OPTIONS
#
#   Any additional options or arguments are passed through as-is to the specified
#   processing application.

# get the directory that this script is run from
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# get the directory that the DMT is therefore from
DMT_DIR=`readlink -f $DIR/..`
VAL_DIR=~jseddon/primavera/primavera-val

# Remove the following environment variable on LOTUS that breaks conda
unset LSB_ECHKPNT_RSH_CMD

export PATH=/group_workspaces/jasmin2/primavera1/tools/miniconda2/bin:$PATH
. activate py3-6

export DJANGO_SETTINGS_MODULE=pdata_site.settings
export PYTHONPATH=$DMT_DIR:$VAL_DIR:$PYTHONPATH
export PATH=$PATH:/group_workspaces/jasmin2/primavera1/tools/adler32

PYTHON_SCRIPT=$1
shift

$DIR/$PYTHON_SCRIPT "$@"

exit_code=$?

# send an email to indicate completion
if [ "$PYTHON_SCRIPT" != "send_emails.py" ] && [ "$PYTHON_SCRIPT" != "create_root_chown_list.py" ] && [ "$PYTHON_SCRIPT" != "split_retrieve_request.py" ] && [ "$PYTHON_SCRIPT" != "auto_validate.py" ]; then
    echo "$PYTHON_SCRIPT complete. Sending email."
    $DIR/create_email.py "[PRIMAVERA] $LSB_JOBID finished" "$LSB_JOBNAME has finished"
fi

exit "$exit_code"

# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-01-24 17:36
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_name', models.CharField(max_length=200)),
                ('attribute_type', models.CharField(max_length=200)),
                ('attribute_value', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Attribute',
            },
        ),
        migrations.CreateModel(
            name='Datafile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_location', models.CharField(max_length=200, unique=True, verbose_name='Original Location')),
                ('batch_id', models.IntegerField(blank=True, null=True, verbose_name='Batch ID')),
                ('status', models.CharField(blank=True, max_length=200, null=True, verbose_name='Status')),
                ('original_owner', models.CharField(max_length=200, verbose_name='Original Owner')),
                ('workspace', models.CharField(blank=True, max_length=200, null=True, verbose_name='Workspace')),
                ('date_scanned', models.DateTimeField(auto_now_add=True, verbose_name='Date Scanned')),
                ('date_archived', models.DateTimeField(blank=True, null=True, verbose_name='Date Archived')),
                ('file_size', models.IntegerField(verbose_name='File Size')),
                ('file_checksum', models.CharField(blank=True, max_length=50, null=True, verbose_name='File Checksum')),
                ('file_checksum_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='File Checksum Type')),
                ('file_format', models.CharField(max_length=40, verbose_name='File Format')),
            ],
            options={
                'verbose_name': 'Data File',
            },
        ),
        migrations.CreateModel(
            name='DatafileAttributeLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.Attribute')),
                ('data_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.Datafile')),
            ],
            options={
                'verbose_name': 'Data File-Attribute Link',
            },
        ),
        migrations.CreateModel(
            name='DatafileNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_file_note', models.CharField(max_length=2000)),
                ('note_author', models.CharField(max_length=50)),
                ('note_datetime', models.DateTimeField(auto_now_add=True)),
                ('data_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.Datafile')),
            ],
            options={
                'verbose_name': 'Data File Note',
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('var_name', models.CharField(max_length=200)),
                ('standard_name', models.CharField(blank=True, max_length=200, null=True)),
                ('long_name', models.CharField(blank=True, max_length=200, null=True)),
                ('var_type', models.CharField(max_length=200)),
                ('units', models.CharField(default='1', max_length=200, null=True)),
                ('attributes_list', models.CharField(max_length=2000, null=True)),
            ],
            options={
                'verbose_name': 'Variable',
            },
        ),
        migrations.CreateModel(
            name='VariableAttributeLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.Attribute')),
            ],
            options={
                'verbose_name': 'Variable-Attribute Link',
            },
        ),
        migrations.CreateModel(
            name='VariableNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_note', models.CharField(max_length=2000)),
                ('note_datetime', models.DateTimeField(auto_now_add=True)),
                ('note_author', models.CharField(max_length=50)),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.Variable')),
            ],
            options={
                'verbose_name': 'Variable Note',
            },
        ),
        migrations.CreateModel(
            name='VariableOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_val', models.FloatField(blank=True, null=True, verbose_name='Maximum Value')),
                ('min_val', models.FloatField(blank=True, null=True, verbose_name='Minimum Value')),
                ('shape', models.CharField(blank=True, max_length=50, null=True, verbose_name='Shape')),
                ('data_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.Datafile', verbose_name='Data File')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.Variable', verbose_name='Variable')),
            ],
            options={
                'verbose_name': 'Variable Occurrence',
            },
        ),
        migrations.AddField(
            model_name='variableattributelink',
            name='var_occurrence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='et_indexer.VariableOccurrence'),
        ),
    ]
